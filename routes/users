const { Router } = require('express');
const Yup = require('yup');
const Validator = require('fastest-validator');

const validator = new Validator();
const router = new Router();
const User = require('../models/User');
const usercontroller = require('../controllers/userController');
const { authenticated } = require('../middlewares/auth');




// const schema = {
//     fullname: {
//         type: "string",
//         trim: true,
//         min: 4,
//         max: 255,
//         optional: false,
//         messages: {
//             required: "نام و نام خانوادگی الزامی می باشد",
//             stringMin: "نام و نام خانوادگی نباید کمتر از 4 کاراکتر باشد",
//             stringMax: "نام و نام خانوادگی نباید بیشتر از 255 کاراکتر باشد",
//         }
//     },
//     email: {
//         type: "email",
//         normalize: true,
//         messages: {
//             emailEmpty: "فیلد ایمیل نباید خالی باشد",
//             required: "ایمیل الزامی می باشد",
//             string: "آدرس ایمیل را بررسی کنید",
//         },
//     },
//     password: {
//         type: "string",
//         min: 4,
//         max: 255,
//         messages: {
//             required: "کلمه عبور الزامی می باشد",
//             string: "کلمه عبور را بررسی کنید",
//             stringMin: "کلمه عبور نباید کمتر از 4 کاراکتر باشد",
//             stringMax: "کلمه عبور نمی تواند بیشتر از 255 کاراکتر باشد",
//         },
//     },
//     confirmPassword: {
//         type: "string",
//         min: 4,
//         max: 255,
//         messages: {
//             required: "تکرار کلمه عبور الزامی می باشد",
//             string: "تکرار کلمه عبور را بررسی کنید",
//             stringMin: "تکرار کلمه عبور نباید کمتر از 4 کاراکتر باشد",
//             stringMax: "تکرار کلمه عبور نباید بیشتر از 255 کاراکتر باشد",
//         },
//     },
//     $$strict: true,
// };



// @desc Login Page
// @route GET /users/login
router.get("/login", usercontroller.login);

// @desc  GET Register Page
// @route  GET /users/register
router.get("/register", usercontroller.register);

// @desc  GET Forget Password Page
// @route  GET /users/forget-password
router.get("/forget-password", usercontroller.forgetPassword);

// @desc  GET Reset Password Page
// @route  GET /users/reset-password/:token
router.get("/resset-password/:token", usercontroller.resetPassword);

//@desc Logout Handle
//@route GET /users/register
router.get("/logout", authenticated, usercontroller.logout);

// @desc Login Handle
// @route POST /users/login
router.post("/login", usercontroller.handleLogin, usercontroller.rememberMe);

// @desc Register Handle
// @route POST /users/register
router.post("/register", usercontroller.createUser);

// @desc POST Handle Forget Password
// @route POST /users/forget-password
router.post("/forget-password", usercontroller.handleForgetPassword);

// @desc POST Handle Reset Password
// @route POST /users/reset-password/:id
router.post("/resset-password/:id", usercontroller.handleResetPassword);



module.exports = router;